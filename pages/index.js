import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useQuery, useMutation } from "@apollo/client";
import { gql } from "@apollo/client";
import { useState } from "react";
import Todos from "../components/Todos";
import {
  useSignInEmailPassword,
  useSignOut,
  useAuthenticated,
} from "@nhost/nextjs";

const Get_Todos = gql`
  query {
    todo {
      title
      id
      completed
    }
  }
`;

const Add_Todos = gql`
  mutation MyMutation($todo: todo_insert_input!) {
    __typename
    insert_todo(objects: [$todo]) {
      affected_rows
    }
  }
`;
export default function Home() {
  const { data, loading, error } = useQuery(Get_Todos);
  const [todoTitle, setTodoTitle] = useState("");
  const [insertTodo] = useMutation(Add_Todos);
  const isAuthenticated = useAuthenticated();
  const signOut = useSignOut();
  const todos = data?.todo;

  const handleSignOut = async () => {
    signOut.signOut();
    console.log("Use is signed Out");
  };

  const { signInEmailPassword } = useSignInEmailPassword(
    "hello@kenny.engineer",
    "1234567890"
  );

  // TRYING TO FIGURE OUT USER ROLE PERMISSIONS NOT WORKING

  async function handleSubmit(e) {
    e.preventDefault();
    console.log(isAuthenticated);
    try {
      // insert todo item to the todo table
      await insertTodo({
        variables: {
          todo: {
            title: todoTitle,
          },
        },
      });

      setTodoTitle("");
      console.log("Todo inserted");
    } catch (error) {
      console.log(error);
    }
  }

  if (loading) return <p>Loading...</p>;
  if (error) console.log(error);
  return (
    <div className={styles.container}>
      <Head>
        <title>Nhost todo app</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>
          Create Nhost <a href="#">Todos!</a>
        </h1>

        <form onSubmit={handleSubmit} className={styles.search}>
          <input
            className={styles.input}
            type="text"
            placeholder="Add a todo"
            value={todoTitle}
            onChange={(event) => setTodoTitle(event.target.value)}
          />
        </form>

        {isAuthenticated ? (
          <button className={styles.button} onClick={handleSignOut}>
            {" "}
            Sign out
          </button>
        ) : (
          <button className={styles.button} onClick={signInEmailPassword}>
            {" "}
            Sign in
          </button>
        )}

        {data ? (
          <Todos data={todos} loading={loading} error={error} />
        ) : (
          <div>No todos yet!</div>
        )}
      </main>
    </div>
  );
}

// mutation MyMutation($todo: todo_insert_input!) {
//   __typename
//   insert_todo(objects: [$todo]) {
//     affected_rows
//   }
// }
// {
//   "todo": {
//     "title": "Hello"
//   }
// }
